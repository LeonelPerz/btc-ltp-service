definitions:
  dto.ErrorResponse:
    description: Standard error response for endpoints
    properties:
      code:
        description: HTTP error code or internal code
        example: "400"
        type: string
      error:
        description: Main error message
        example: INVALID_PARAMETER
        type: string
      message:
        description: Detailed error description
        example: The provided trading pair is not supported
        type: string
    required:
    - error
    type: object
  dto.GetLTPResponse:
    description: Main response with last traded prices
    properties:
      errors:
        description: Errors for specific pairs (optional)
        items:
          $ref: '#/definitions/dto.PriceError'
        type: array
      ltp:
        description: List of successfully retrieved prices
        items:
          $ref: '#/definitions/dto.PriceData'
        type: array
    required:
    - ltp
    type: object
  dto.HealthResponse:
    description: Health check response with service status
    properties:
      services:
        additionalProperties:
          type: string
        description: Individual service statuses
        example:
          cache: healthy
          exchange: healthy
        type: object
      status:
        description: Overall service status
        enum:
        - healthy
        - degraded
        - unhealthy
        example: healthy
        type: string
      timestamp:
        description: When the health check was performed
        example: "2023-12-01T10:30:00Z"
        type: string
    required:
    - status
    - timestamp
    type: object
  dto.PriceData:
    description: Last traded price data for a cryptocurrency pair
    properties:
      amount:
        description: Price in the quoted currency
        example: 45123.45
        minimum: 0
        type: number
      pair:
        description: Trading pair (e.g., BTC/USD)
        example: BTC/USD
        type: string
    required:
    - amount
    - pair
    type: object
  dto.PriceError:
    description: Error when retrieving price for a specific pair
    properties:
      code:
        description: Optional error code
        example: PRICE_NOT_FOUND
        type: string
      error:
        description: Main error message
        example: price not available
        type: string
      message:
        description: Additional descriptive message
        example: Price data is temporarily unavailable
        type: string
      pair:
        description: Trading pair that caused the error
        example: ETH/USD
        type: string
    required:
    - error
    - pair
    type: object
info:
  contact: {}
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Verifies that the service is running correctly. Responds quickly
        without checking external dependencies.
      produces:
      - application/json
      responses:
        "200":
          description: Service is running correctly
          schema:
            $ref: '#/definitions/dto.HealthResponse'
      summary: Basic health check
      tags:
      - health
  /ltp:
    get:
      consumes:
      - application/json
      description: Get the latest traded prices for specified cryptocurrency pairs.
        If no pairs are specified, returns all supported pairs.
      parameters:
      - description: Trading pairs separated by commas (e.g., BTC/USD,ETH/USD). If
          empty, returns all supported pairs
        in: query
        name: pair
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Prices retrieved successfully
          schema:
            $ref: '#/definitions/dto.GetLTPResponse'
        "206":
          description: Partial success - some pairs failed
          schema:
            $ref: '#/definitions/dto.GetLTPResponse'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Pairs not found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "503":
          description: Service unavailable
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get Last Traded Prices
      tags:
      - prices
  /ltp/cached:
    get:
      consumes:
      - application/json
      description: Get all prices currently stored in cache. Useful for debugging
        and monitoring cache state.
      produces:
      - application/json
      responses:
        "200":
          description: Cached prices retrieved successfully
          schema:
            $ref: '#/definitions/dto.GetLTPResponse'
        "500":
          description: Error retrieving prices from cache
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get cached prices
      tags:
      - prices
  /ltp/refresh:
    post:
      consumes:
      - application/json
      description: Manually refresh cached prices for specified pairs. Administrative
        endpoint to force data update.
      parameters:
      - description: Trading pairs separated by commas to refresh (e.g., BTC/USD,ETH/USD)
        in: query
        name: pairs
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Prices refreshed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid or missing parameters
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Failed to refresh prices
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Refresh cached prices
      tags:
      - prices
  /ready:
    get:
      consumes:
      - application/json
      description: Verifies that the service is ready to receive traffic, including
        validation of dependencies like cache and external services.
      produces:
      - application/json
      responses:
        "200":
          description: Service is ready to receive traffic
          schema:
            $ref: '#/definitions/dto.HealthResponse'
        "503":
          description: Service is not ready - dependencies are failing
          schema:
            $ref: '#/definitions/dto.HealthResponse'
      summary: Complete readiness check
      tags:
      - health
swagger: "2.0"
