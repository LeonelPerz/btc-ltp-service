{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/health": {
            "get": {
                "description": "Verifies that the service is running correctly. Responds quickly without checking external dependencies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Basic health check",
                "responses": {
                    "200": {
                        "description": "Service is running correctly",
                        "schema": {
                            "$ref": "#/definitions/dto.HealthResponse"
                        }
                    }
                }
            }
        },
        "/ltp": {
            "get": {
                "description": "Get the latest traded prices for specified cryptocurrency pairs. If no pairs are specified, returns all supported pairs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prices"
                ],
                "summary": "Get Last Traded Prices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trading pairs separated by commas (e.g., BTC/USD,ETH/USD). If empty, returns all supported pairs",
                        "name": "pair",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prices retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GetLTPResponse"
                        }
                    },
                    "206": {
                        "description": "Partial success - some pairs failed",
                        "schema": {
                            "$ref": "#/definitions/dto.GetLTPResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Pairs not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ltp/cached": {
            "get": {
                "description": "Get all prices currently stored in cache. Useful for debugging and monitoring cache state.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prices"
                ],
                "summary": "Get cached prices",
                "responses": {
                    "200": {
                        "description": "Cached prices retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GetLTPResponse"
                        }
                    },
                    "500": {
                        "description": "Error retrieving prices from cache",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ltp/refresh": {
            "post": {
                "description": "Manually refresh cached prices for specified pairs. Administrative endpoint to force data update.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prices"
                ],
                "summary": "Refresh cached prices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trading pairs separated by commas to refresh (e.g., BTC/USD,ETH/USD)",
                        "name": "pairs",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prices refreshed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to refresh prices",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Verifies that the service is ready to receive traffic, including validation of dependencies like cache and external services.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Complete readiness check",
                "responses": {
                    "200": {
                        "description": "Service is ready to receive traffic",
                        "schema": {
                            "$ref": "#/definitions/dto.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service is not ready - dependencies are failing",
                        "schema": {
                            "$ref": "#/definitions/dto.HealthResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ErrorResponse": {
            "description": "Standard error response for endpoints",
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "code": {
                    "description": "HTTP error code or internal code",
                    "type": "string",
                    "example": "400"
                },
                "error": {
                    "description": "Main error message",
                    "type": "string",
                    "example": "INVALID_PARAMETER"
                },
                "message": {
                    "description": "Detailed error description",
                    "type": "string",
                    "example": "The provided trading pair is not supported"
                }
            }
        },
        "dto.GetLTPResponse": {
            "description": "Main response with last traded prices",
            "type": "object",
            "required": [
                "ltp"
            ],
            "properties": {
                "errors": {
                    "description": "Errors for specific pairs (optional)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PriceError"
                    }
                },
                "ltp": {
                    "description": "List of successfully retrieved prices",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PriceData"
                    }
                }
            }
        },
        "dto.HealthResponse": {
            "description": "Health check response with service status",
            "type": "object",
            "required": [
                "status",
                "timestamp"
            ],
            "properties": {
                "services": {
                    "description": "Individual service statuses",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "cache": "healthy",
                        "exchange": "healthy"
                    }
                },
                "status": {
                    "description": "Overall service status",
                    "type": "string",
                    "enum": [
                        "healthy",
                        "degraded",
                        "unhealthy"
                    ],
                    "example": "healthy"
                },
                "timestamp": {
                    "description": "When the health check was performed",
                    "type": "string",
                    "example": "2023-12-01T10:30:00Z"
                }
            }
        },
        "dto.PriceData": {
            "description": "Last traded price data for a cryptocurrency pair",
            "type": "object",
            "required": [
                "amount",
                "pair"
            ],
            "properties": {
                "amount": {
                    "description": "Price in the quoted currency",
                    "type": "number",
                    "minimum": 0,
                    "example": 45123.45
                },
                "pair": {
                    "description": "Trading pair (e.g., BTC/USD)",
                    "type": "string",
                    "example": "BTC/USD"
                }
            }
        },
        "dto.PriceError": {
            "description": "Error when retrieving price for a specific pair",
            "type": "object",
            "required": [
                "error",
                "pair"
            ],
            "properties": {
                "code": {
                    "description": "Optional error code",
                    "type": "string",
                    "example": "PRICE_NOT_FOUND"
                },
                "error": {
                    "description": "Main error message",
                    "type": "string",
                    "example": "price not available"
                },
                "message": {
                    "description": "Additional descriptive message",
                    "type": "string",
                    "example": "Price data is temporarily unavailable"
                },
                "pair": {
                    "description": "Trading pair that caused the error",
                    "type": "string",
                    "example": "ETH/USD"
                }
            }
        }
    }
}