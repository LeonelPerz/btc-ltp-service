package docs

// Package docs GENERATED BY SWAG; DO NOT EDIT

const SwaggerInfo_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/ltp": {
            "get": {
                "description": "Retrieves Last Traded Price for specified trading pairs or all supported pairs if none specified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prices"
                ],
                "summary": "Get Last Traded Prices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trading pair (can be repeated multiple times)",
                        "name": "pair",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of trading pairs",
                        "name": "pairs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.LTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/docs.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/docs.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/pairs": {
            "get": {
                "description": "Returns a list of all supported trading pairs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pairs"
                ],
                "summary": "Get Supported Trading Pairs",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/docs.SupportedPairsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/docs.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Health check endpoint to verify service status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "$ref": "#/definitions/docs.HealthResponse"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Prometheus metrics endpoint for monitoring",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Prometheus Metrics",
                "responses": {
                    "200": {
                        "description": "Metrics in Prometheus format",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "docs.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/docs.ErrorDetail"
                }
            }
        },
        "docs.ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "docs.HealthResponse": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "string",
                    "example": "btc-ltp-service"
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                }
            }
        },
        "docs.SupportedPairsResponse": {
            "type": "object",
            "properties": {
                "supported_pairs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "BTC/USD",
                        "BTC/EUR",
                        "BTC/CHF"
                    ]
                }
            }
        },
        "model.LTPPair": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 52000.12
                },
                "pair": {
                    "type": "string",
                    "example": "BTC/USD"
                }
            }
        },
        "model.LTPResponse": {
            "type": "object",
            "properties": {
                "ltp": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LTPPair"
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{"http"},
	Title:       "BTC Last Traded Price API",
	Description: "A Go microservice that provides real-time Last Traded Price (LTP) data for Bitcoin trading pairs using the Kraken API.",
}

// ErrorResponse represents an error response
type ErrorResponse struct {
	Error ErrorDetail `json:"error"`
}

// ErrorDetail represents error details
type ErrorDetail struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// HealthResponse represents a health check response
type HealthResponse struct {
	Status  string `json:"status" example:"healthy"`
	Service string `json:"service" example:"btc-ltp-service"`
}

// SupportedPairsResponse represents the supported pairs response
type SupportedPairsResponse struct {
	SupportedPairs []string `json:"supported_pairs" example:"BTC/USD,BTC/EUR,BTC/CHF"`
}
